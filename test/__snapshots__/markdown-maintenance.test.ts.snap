// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Maintenance documentation normalizes MAINTENANCE.md 1`] = `
"# Maintenance of the code

## Overall workflow

The typical developer workflow goes as follow:

| Mode                   | Code analysis | Testing                          | Building   | Publishing |
| ---------------------- | ------------- | -------------------------------- | ---------- | ---------- |
| Checking               | make analyze  | make test                        | make build | make ready |
| Fixing                 | Fix the code  | Update dependencies and make doc |            |            |
| Continuous integration | make build    |                                  |            |            |

## Commands

### Run GitHub Actions locally

> Run GitHub Actions inside a docker container

__Motivation:__ Test GitHub Actions locally

__When to use it:__ When changing github actions

__Run:__ \`\`\`act\`\`\`

__From package:__ [act](https://github.com/nektos/act) of [brew](https://docs.brew.sh/) :  Run GitHub Actions locally

---

### Build the library

> Transpile all the Elm source code to javascript

__Motivation:__ The code has to be build before been published

__When to use it:__ Before building

__Run:__ \`\`\`make build\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Generate the documentation

> Generate the markdown documentation for the Elm project

__Motivation:__ Good documentation is essential for developer experience

__When to use it:__ Before publishing

__Run:__ \`\`\`make doc\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Preview the documentation

> Generate the markdown documentation for the Elm project

__Motivation:__ Good documentation is essential for developer experience

__When to use it:__ Before publishing

__Run:__ \`\`\`make preview-doc\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Update github repository

> Enable useful features for the github project repository

__Motivation:__ Create consistent settings

__When to use it:__ After creating

__Run:__ \`\`\`make github\`\`\`

__From package:__ [gh](https://cli.github.com/) of [brew](https://docs.brew.sh/) :  GitHub CLI brings GitHub to your terminal

---

### Static code analysis

> Find problems in Elm code

__Motivation:__ Make the code more consistent and avoid bugs

__When to use it:__ Before compilation

__Run:__ \`\`\`make analyze\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Markdown check

> Checks that the markdown documents follows some consistent guidelines

__Motivation:__ Make the markdown documents consistent in style

__When to use it:__ Before publishing

__Run:__ \`\`\`make md\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Markdown fix

> Modify the markdown documents to ensure they follow some consistent guidelines

__Motivation:__ Make the markdown documents consistent in style

__When to use it:__ Before publishing

__Run:__ \`\`\`make md:fix\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Install global dependencies

> Install some dependencies globally

__Motivation:__ Before running most commands

__When to use it:__ Before building

__Run:__ \`\`\`make install-global\`\`\`

__From package:__ [yarn](https://classic.yarnpkg.com/en/) of [npm](https://www.npmjs.com/) :  Dependency management

---

### Ready for publishing

> Run a sequence of commands to check that the library is ready to be published

__Motivation:__ Detect quality flaws before pushing the code

__When to use it:__ Before pushing a branch

__Run:__ \`\`\`make ready\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Reset distribution and report folders

> Delete the dist and report folder

__Motivation:__ Start from a clean slate

__When to use it:__ Before building

__Run:__ \`\`\`make reset\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Unit testing

> Run the unit tests

__Motivation:__ Check that the units of code behave as intended

__When to use it:__ After compilation, before build

__Run:__ \`\`\`make test\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Help for commands

> Summarize all the yarn and shell commands

__Motivation:__ Assist the developer in quickly finding commands

__When to use it:__ Before running a command

__Run:__ \`\`\`make help\`\`\`

__From package:__ [makefile](https://opensource.com/article/18/8/what-how-makefile) of [brew](https://docs.brew.sh/) :  Build management

---

### Git commit from file

> Git commit a message that has been saved in the .message file

__Motivation:__ Quicker commit for pre-defined use cases

__When to use it:__ When commit to github

__Run:__ \`\`\`gcf\`\`\`

__From package:__ [zsh](https://www.zsh.org/) of [brew](https://docs.brew.sh/) :  Shell designed for interactive use

---

### Normalize the code structure

> Normalize the code structure using baldrick (global version)

__Motivation:__ Create a consistent developer experience

__When to use it:__ When changing github actions

__Run:__ \`\`\`make norm\`\`\`

__From package:__ [baldrick-elm](https://github.com/flarebyte/baldrick-elm) of [npm](https://www.npmjs.com/) :  Elm scaffolding assistant

---"
`;

exports[`Maintenance documentation produces a list of npm scripts 1`] = `
Array [
  Object {
    "makeLines": Array [],
    "name": "build",
    "parentMakeTask": "test beautify doc",
    "title": "Build the library",
  },
  Object {
    "makeLines": Array [
      "elm make --docs=documentation.json",
    ],
    "name": "doc",
    "parentMakeTask": undefined,
    "title": "Generate the documentation",
  },
  Object {
    "makeLines": Array [
      "elm-doc-preview",
    ],
    "name": "preview-doc",
    "parentMakeTask": undefined,
    "title": "Preview the documentation",
  },
  Object {
    "makeLines": Array [
      "gh repo edit --delete-branch-on-merge --enable-squash-merge",
    ],
    "name": "github",
    "parentMakeTask": undefined,
    "title": "Update github repository",
  },
  Object {
    "makeLines": Array [
      "elm-analyse -s -o",
    ],
    "name": "analyze",
    "parentMakeTask": undefined,
    "title": "Static code analysis",
  },
  Object {
    "makeLines": Array [
      "markdown check",
      "markdown check -s .github/",
    ],
    "name": "md",
    "parentMakeTask": undefined,
    "title": "Markdown check",
  },
  Object {
    "makeLines": Array [
      "markdown fix",
      "markdown fix -s .github/",
    ],
    "name": "md:fix",
    "parentMakeTask": undefined,
    "title": "Markdown fix",
  },
  Object {
    "makeLines": Array [
      "yarn global add elm-format@0.8.4",
      "yarn global add elm-review",
      "yarn global add elm-upgrade",
      "yarn global add elm-doc-preview",
      "yarn global add elm-analyse",
    ],
    "name": "install-global",
    "parentMakeTask": undefined,
    "title": "Install global dependencies",
  },
  Object {
    "makeLines": Array [],
    "name": "ready",
    "parentMakeTask": "analyze test",
    "title": "Ready for publishing",
  },
  Object {
    "makeLines": Array [
      "rm -rf elm-stuff",
      "rm -rf tests/elm-stuff",
    ],
    "name": "reset",
    "parentMakeTask": undefined,
    "title": "Reset distribution and report folders",
  },
  Object {
    "makeLines": Array [
      "elm-test",
    ],
    "name": "test",
    "parentMakeTask": undefined,
    "title": "Unit testing",
  },
  Object {
    "makeLines": Array [
      "cat commands.txt",
    ],
    "name": "help",
    "parentMakeTask": undefined,
    "title": "Help for commands",
  },
  Object {
    "makeLines": Array [
      "npx baldrick-elm generate -f lib -ga 'mycompany' -ch 'Great Company' -cy 2020 -l MIT && yarn md:fix",
    ],
    "name": "norm",
    "parentMakeTask": undefined,
    "title": "Normalize the code structure",
  },
]
`;
